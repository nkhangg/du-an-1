/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.boxcf.ui;

import com.boxcf.store.Store;
import com.box.utils.XDate;
import com.boxcf.dao.PhieuDatBoxDao;
import com.boxcf.dao.DatTruocDao;
import com.boxcf.models.BoxModelItem;
import com.boxcf.models.PhieuDatBox;
import com.boxcf.models.DatTruoc;
import com.boxcf.models.ModelCboDatTruoc;
import com.boxcf.models.ModelItem;
import java.awt.HeadlessException;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class ThongTinBoxDat extends javax.swing.JFrame {

//    Box box;
    ModelItem box;
    private ArrayList<DatTruoc> list = new ArrayList<>();
    DefaultTableModel model;
    
    OrderView orderView = Store.orderView;
    
    public ThongTinBoxDat() {
        initComponents();
//        init();
    }
    
    public ThongTinBoxDat(ModelItem box) throws HeadlessException {
        this.box = box;
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientPanel1 = new com.boxcf.components.GradientPanel();
        gradientPanel2 = new com.boxcf.components.GradientPanel();
        jLabel8 = new javax.swing.JLabel();
        lblGioKT = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cboSoGio = new com.boxcf.components.Combobox();
        txtTenBox = new com.boxcf.components.TextField();
        txtLoaiBox = new com.boxcf.components.TextField();
        buttonRound4 = new com.boxcf.components.ButtonRound();
        buttonRound5 = new com.boxcf.components.ButtonRound();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatTruoc = new javax.swing.JTable();
        clsoeButton1 = new com.boxcf.components.ClsoeButton();
        cboGioBD = new com.boxcf.components.Combobox();
        lblNameCustomer = new com.boxcf.components.TextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(245, 250, 255));
        setUndecorated(true);

        gradientPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(241, 241, 241)));
        gradientPanel1.setColor1(new java.awt.Color(3, 155, 216));
        gradientPanel1.setColor2(new java.awt.Color(3, 155, 216));

        gradientPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(241, 241, 241)));
        gradientPanel2.setColor1(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel8.setText("Giờ KT");

        lblGioKT.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblGioKT.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("Box");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("Giờ BD");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel7.setText("Số giờ");

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel4.setText("Loại box");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(9, 82, 110));
        jLabel1.setText("THÔNG TIN ĐẶT BOX");

        cboSoGio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cboSoGio.setLabeText("");
        cboSoGio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSoGioActionPerformed(evt);
            }
        });

        txtTenBox.setLabelText("");

        txtLoaiBox.setLabelText("");

        buttonRound4.setBackground(new java.awt.Color(255, 150, 0));
        buttonRound4.setForeground(new java.awt.Color(255, 255, 255));
        buttonRound4.setText("TRẢ BOX");
        buttonRound4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        buttonRound4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRound4ActionPerformed(evt);
            }
        });

        buttonRound5.setBackground(new java.awt.Color(255, 150, 0));
        buttonRound5.setForeground(new java.awt.Color(255, 255, 255));
        buttonRound5.setText("Đặt");
        buttonRound5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        buttonRound5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRound5ActionPerformed(evt);
            }
        });

        tblDatTruoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên Khách Hàng", "Giờ Bắt Đầu", "Giờ Kết Thúc", "Trạng Thái"
            }
        ));
        jScrollPane1.setViewportView(tblDatTruoc);

        clsoeButton1.setBackground(new java.awt.Color(255, 255, 255));
        clsoeButton1.setPreferredSize(new java.awt.Dimension(30, 30));

        cboGioBD.setLabeText("");

        lblNameCustomer.setText("Phạm Nhứt Khang");
        lblNameCustomer.setLabelText("");

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel6.setText("Tên khách hàng");

        javax.swing.GroupLayout gradientPanel2Layout = new javax.swing.GroupLayout(gradientPanel2);
        gradientPanel2.setLayout(gradientPanel2Layout);
        gradientPanel2Layout.setHorizontalGroup(
            gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gradientPanel2Layout.createSequentialGroup()
                            .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(75, 75, 75)
                            .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cboGioBD, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboSoGio, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gradientPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblGioKT, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gradientPanel2Layout.createSequentialGroup()
                            .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel4))
                            .addGap(26, 26, 26)
                            .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtLoaiBox, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblNameCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(gradientPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gradientPanel2Layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(txtTenBox, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(gradientPanel2Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(gradientPanel2Layout.createSequentialGroup()
                                        .addComponent(buttonRound4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(buttonRound5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientPanel2Layout.createSequentialGroup()
                        .addComponent(clsoeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        gradientPanel2Layout.setVerticalGroup(
            gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientPanel2Layout.createSequentialGroup()
                .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(clsoeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientPanel2Layout.createSequentialGroup()
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtLoaiBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNameCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboGioBD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cboSoGio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblGioKT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(gradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonRound4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonRound5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout gradientPanel1Layout = new javax.swing.GroupLayout(gradientPanel1);
        gradientPanel1.setLayout(gradientPanel1Layout);
        gradientPanel1Layout.setHorizontalGroup(
            gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        gradientPanel1Layout.setVerticalGroup(
            gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientPanel1Layout.createSequentialGroup()
                .addComponent(gradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRound4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRound4ActionPerformed
        this.dispose();
        box.setSoLuong(Integer.parseInt(cboSoGio.getSelectedItem().toString()));
    }//GEN-LAST:event_buttonRound4ActionPerformed

    private void cboSoGioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSoGioActionPerformed
        setGioKT();

    }//GEN-LAST:event_cboSoGioActionPerformed

    private void buttonRound5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRound5ActionPerformed
        handleBook();
    }//GEN-LAST:event_buttonRound5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongTinBoxDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongTinBoxDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongTinBoxDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongTinBoxDat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongTinBoxDat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.boxcf.components.ButtonRound buttonRound4;
    private com.boxcf.components.ButtonRound buttonRound5;
    private com.boxcf.components.Combobox cboGioBD;
    private com.boxcf.components.Combobox cboSoGio;
    private com.boxcf.components.ClsoeButton clsoeButton1;
    private com.boxcf.components.GradientPanel gradientPanel1;
    private com.boxcf.components.GradientPanel gradientPanel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGioKT;
    private com.boxcf.components.TextField lblNameCustomer;
    private javax.swing.JTable tblDatTruoc;
    private com.boxcf.components.TextField txtLoaiBox;
    private com.boxcf.components.TextField txtTenBox;
    // End of variables declaration//GEN-END:variables

    private void init() {
//        clsoeButton1.initEvent(this);
//        model = (DefaultTableModel) tblDatTruoc.getModel();
//        prepareUI();
//        setBox(box);
//        renderDataTable();
//        renderFitTime();
//        setGioKT();
    }
    
    private void setBox(ModelItem box) {
        txtLoaiBox.setText(box.getLoaiBox().getTenLoaiBox() + "");
        txtTenBox.setText(box.getTen());
    }
    
    private void prepareUI() {
        this.setLocationRelativeTo(null);
        Shape shape = new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 20, 20);
        this.setShape(shape);
    }
    
    private void renderFitTime() {
        PhieuDatBox db = PhieuDatBoxDao.getInstant().selectByBox(box.getMaItem().toString());
        ArrayList<ModelCboDatTruoc> listCbo = new ArrayList<>();
        
        if (db == null && list.isEmpty()) {
            int i = 0;
            while (true) {
                Date gioTh = XDate.addHours(XDate.now(), i);
                
                if (XDate.beforeTimeClose(gioTh)) {
                    break;
                }
                listCbo.add(new ModelCboDatTruoc(gioTh, XDate.fitHourWithTime(gioTh)));
                i++;
            }
            renderCboStartHour(listCbo);
        }
        
        if (db == null && !list.isEmpty()) {
            handlePeriod(listCbo);
            return;
        }
        
        if (db != null && !list.isEmpty()) {
            DatTruoc firstBook = list.get(0);
            long secondDb = firstBook.getGioBD().getTime() - db.getGioKT().getTime();
            
            long hour = (secondDb / 60 / 60 / 1000);
            
            if (secondDb > 6000000) {
                ModelCboDatTruoc mcbb = new ModelCboDatTruoc(XDate.addMinus(new Date(db.getGioKT().getTime()), Store.breaks), hour <= 1 ? 1 : (int) hour - 1);
                listCbo.add(mcbb);
            }
            
            handlePeriod(listCbo);
            return;
            
        }
        
        if (db != null && list.isEmpty()) {
            ModelCboDatTruoc mcbb = new ModelCboDatTruoc(XDate.addMinus(new Date(db.getGioKT().getTime()), Store.breaks), XDate.fitHourWithTime(db.getGioKT()));
            
            int i = 0;
            while (true) {
                Date gioTh = XDate.addHours(new Date(mcbb.getTime().getTime()), i);
                
                if (XDate.beforeTimeClose(gioTh)) {
                    break;
                }
                listCbo.add(new ModelCboDatTruoc(gioTh, XDate.fitHourWithTime(gioTh)));
                i++;
            }
            renderCboStartHour(listCbo);
            return;
        }
        
    }
    
    private void handlePeriod(ArrayList<ModelCboDatTruoc> listCbo) {
        for (int i = 0; i < list.size(); i++) {
            System.out.println(list.get(i));
            long second = 0;
            if (i < list.size() - 1) {
                second = list.get(i + 1).getGioBD().getTime() - list.get(i).getGioKT().getTime();
                
            }
            long hour = (second / 60 / 60 / 1000);
            if (second > 6000000) {
                ModelCboDatTruoc mcbb = new ModelCboDatTruoc(XDate.addMinus(new Date(list.get(i).getGioKT().getTime()), Store.breaks), (int) hour <= 1 ? 1 : (int) hour - 1);
                listCbo.add(mcbb);
            }
            
        }
        
        DatTruoc dt = list.get(list.size() - 1);
        ModelCboDatTruoc mcbb = new ModelCboDatTruoc(XDate.addMinus(new Date(dt.getGioKT().getTime()), Store.breaks), XDate.fitHourWithTime(dt.getGioKT()) - 1);
        
        if (!XDate.beforeTimeClose(mcbb.getTime())) {
            listCbo.add(mcbb);
            int i = 1;
            while (true) {
                Date date = XDate.addHours(new Date(mcbb.getTime().getTime()), i);
                ModelCboDatTruoc mddt = new ModelCboDatTruoc(date, XDate.fitHourWithTime(date));
                if (XDate.beforeTimeClose(mddt.getTime())) {
                    break;
                }
                listCbo.add(mddt);
                i++;
            }
        }
        
        renderCboStartHour(listCbo);
    }
    
    private void renderCboStartHour(ArrayList< ModelCboDatTruoc> listCbo) {
        cboGioBD.removeAllItems();
        for (ModelCboDatTruoc md : listCbo) {
            cboGioBD.addItem(md);
        }
        
        cboSoGio.removeAllItems();
        if (cboGioBD.getSelectedItem() instanceof ModelCboDatTruoc) {
            ModelCboDatTruoc md = (ModelCboDatTruoc) cboGioBD.getSelectedItem();
            for (int i = 1; i <= md.getLimit(); i++) {
                cboSoGio.addItem(i);
            }
        }
        
        cboGioBD.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cboSoGio.removeAllItems();
                if (cboGioBD.getSelectedItem() instanceof ModelCboDatTruoc) {
                    ModelCboDatTruoc md = (ModelCboDatTruoc) cboGioBD.getSelectedItem();
                    for (int i = 1; i <= md.getLimit(); i++) {
                        cboSoGio.addItem(i);
                    }
                }
            }
        });
    }
    
    private void setGioKT() {
        if (cboSoGio.getSelectedItem() == null) {
            return;
        }
        int soGio = Integer.parseInt(cboSoGio.getSelectedItem().toString());
        
        Date gioKT = XDate.addHours(XDate.toDate(cboGioBD.getSelectedItem().toString(), Store.partten), soGio);
        lblGioKT.setText(XDate.toString(gioKT, Store.partten));
    }
    
    private void setGioKT(Date gioBD, int soGio) {
        Date gioKT = XDate.addHours(XDate.toDate(cboGioBD.getSelectedItem().toString(), Store.partten), soGio);
        lblGioKT.setText(XDate.toString(gioKT, Store.partten));
    }
    
    private void handleBook() {
        Date gioBd = XDate.toDate(cboGioBD.getSelectedItem().toString(), Store.partten);
        Date GioKt = XDate.toDate(lblGioKT.getText(), Store.partten);
        
        DatTruoc dt = new DatTruoc(Integer.parseInt(box.getMaItem() + ""), lblNameCustomer.getText(), gioBd, GioKt);
        
        System.out.println("handle book : " + dt);
        
        DatTruocDao.getInstant().insert(dt);
        renderDataTable();
        renderFitTime();
    }
    
    private void renderDataTable() {
        model.setRowCount(0);
        for (DatTruoc data : DatTruocDao.getInstant().selectAllWithIdBox(Integer.parseInt(box.getMaItem() + ""))) {
            if (data.isTranThai()) {
                list.add(data);
            }
            Object[] row = new Object[]{data.getTenKH(),
                XDate.toString(data.getGioBD(), Store.partten),
                XDate.toString(data.getGioKT(), Store.partten),
                data.isTranThai() ? "Đang chờ" : "Đã hủy"};
            model.addRow(row);
        }
        
    }
}
